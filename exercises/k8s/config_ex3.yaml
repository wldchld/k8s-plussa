---
title: Own app in Kubernetes
description: Not so simple grading example for Kubernetes
instructions: |
    <p>
        In this exercise you must create your own web server and run it on Kubernetes.
    </p>
    <p>
        You must implement a simple web server using NodeJS that responds to HTTP requests.
        You may use any libraries for this task, but the server's source code must be in a single file.
        The file package.json can contain the depedencies you need. Even if you do not use any libraries,
        you need to submit a valid package.json file.
    </p>
    <p>
        You must also supply a Dockerfile, which will create an image from your app that can be run
        in a container. Remember to *install* the depedencies and supply the start start command for 
        the application. (Hint: node:18-alpine is a good base image.)
    </p>
    <p>
        The server checking your submission will build the Dockerfile you submit and push the image
        to "registry:5000/my-server". You must use this image in your app's deployment.
        Name of the deployment must be "my-server-deployment". The server must run in the port 4500 
        and the port must  be exposed by a service named "my-server-service". Succeeding in this, will 
        grant you 5 out of 10 points. (Hint: Type of the service must be NodePort.)
    </p>
    <p>
        To receive full points, the web server must also reply with custom content and not just with
        any text. The web server root (path "/", such as http://localhost:4500/) must reply with
        a text "Abrakadabra" (without the quotes).
    </p>
    <p>
        Add all the required services and configurations to one Kubernetes YAML-config file and submit it
        below. You can separate services in a single file by adding a line containing 3 dashes in between
        the components (---).
    </p>
view_type: access.types.stdasync.acceptFiles
files:
  - field: appFile
    name: app.js
  - field: packageJsonFile
    name: package.json
  - field: dockerFile
    name: Dockerfile
  - field: k8sConfig
    name: k8sConfig.yaml

container:
  image: k8s-grader
  mount: exercises/k8s
  cmd: /exercise/run.sh ex3
